version: '3'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - ./init-elasticsearch.sh:/usr/share/elasticsearch/init-elasticsearch.sh
    command: /bin/bash -c "echo 'Waiting for Elasticsearch...'; /usr/share/elasticsearch/bin/elasticsearch & until curl -s -o dev/null -w '%{http_code}' 'http://elasticsearch:9200/_cluster/health?wait_for_status=yellow&timeout=50s' | grep -q '200'; do echo 'Waiting for Elasticsearch to be ready...'; sleep 5; done; /usr/share/elasticsearch/init-elasticsearch.sh" # 스크립트 실행
    user: "1000:1000"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://elasticsearch:9200/_cluster/health | grep -q '\"status\":\"yellow\"' || grep -q '\"status\":\"green\"'"]
      interval: 30s
      timeout: 15s
      retries: 10

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.10
    container_name: logstash
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml # logstash.yml 파일 마운트
      - /Users/minjunko/wiki_movie_plots_deduped_csv_data:/usr/share/logstash/data # 데이터 파일 마운트
    ports:
      - "5000:5000"
      - "9600:9600"
    depends_on:
      elasticsearch:
        condition: service_healthy

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.10
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy

volumes:
  esdata:
    driver: local
